{"ast":null,"code":"import { validationMixin } from \"vuelidate\";\nimport { required, minLength, email } from \"vuelidate/lib/validators\";\nexport default {\n  mixins: [validationMixin],\n  data() {\n    return {\n      form: {\n        login: \"\",\n        email: \"\",\n        password: \"\",\n        country: \"Russia\",\n        favoriteThemes: [\"IT\"],\n        agreeWithSendEmail: false,\n        agreeWithRules: false,\n        gender: \"male\"\n      },\n      countries: [{\n        label: \"Польща\",\n        value: \"Poland\"\n      }, {\n        label: \"Україна\",\n        value: \"Ukraine\"\n      }, {\n        label: \"США\",\n        value: \"USA\"\n      }],\n      themes: [{\n        label: \"Технології\",\n        value: \"IT\"\n      }, {\n        label: \"Мови\",\n        value: \"languages\"\n      }, {\n        label: \"Математика\",\n        value: \"mathematics\"\n      }],\n      registrationPassed: false // Added variable to track successful registration\n    };\n  },\n\n  validations: {\n    form: {\n      login: {\n        required,\n        minLength: minLength(5)\n      },\n      email: {\n        required,\n        email\n      },\n      password: {\n        required\n      },\n      agreeWithRules: {\n        mustBeTrue(value) {\n          return value;\n        }\n      },\n      favoriteThemes: {\n        maxCount: value => value.length <= 3\n      }\n    }\n  },\n  methods: {\n    checkForm() {\n      this.$v.form.$touch();\n      if (!this.$v.form.$error) {\n        this.registrationPassed = true;\n      }\n    }\n  }\n};","map":{"version":3,"names":["validationMixin","required","minLength","email","mixins","data","form","login","password","country","favoriteThemes","agreeWithSendEmail","agreeWithRules","gender","countries","label","value","themes","registrationPassed","validations","mustBeTrue","maxCount","length","methods","checkForm","$v","$touch","$error"],"sources":["src/components/FormsVuelidate.vue"],"sourcesContent":["<template>\n  <form class=\"sign-up\" @submit.prevent=\"checkForm\">\n    <div class=\"form-group\">\n      <label for=\"login\">Логін:</label>\n      <input\n        id=\"login\"\n        class=\"form-control\"\n        :class=\"$v.form.login.$error ? 'is-invalid' : ''\"\n        v-model.trim=\"form.login\"\n      />\n      <p\n        v-if=\"$v.form.login.$dirty && !$v.form.login.required\"\n        class=\"invalid-feedback\"\n      >\n        Обов'язкове поле\n      </p>\n      <p\n        v-if=\"$v.form.login.$dirty && !$v.form.login.minLength\"\n        class=\"invalid-feedback\"\n      >\n        Тут повинно бути більше 5-ти символів\n      </p>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"login\">Почта:</label>\n      <input\n        id=\"email\"\n        type=\"email\"\n        class=\"form-control\"\n        :class=\"$v.form.email.$error ? 'is-invalid' : ''\"\n        v-model.trim=\"form.email\"\n      />\n      <p\n        v-if=\"$v.form.login.$dirty && !$v.form.email.required\"\n        class=\"invalid-feedback\"\n      >\n        Обов'язкове поле\n      </p>\n      <p\n        v-if=\"$v.form.login.$dirty && !$v.form.email.email\"\n        class=\"invalid-feedback\"\n      >\n        Email некоректний\n      </p>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"login\">Пароль:</label>\n      <input\n        id=\"password\"\n        type=\"password\"\n        class=\"form-control\"\n        :class=\"$v.form.password.$error ? 'is-invalid' : ''\"\n        v-model.trim=\"form.password\"\n      />\n      <p\n        v-if=\"$v.form.login.$dirty && !$v.form.password.required\"\n        class=\"invalid-feedback\"\n      >\n        Обов'язкове поле\n      </p>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"country\">Країна проживання:</label>\n      <select id=\"country\" class=\"form-control\" v-model=\"form.country\">\n        <option\n          v-for=\"(country, index) in countries\"\n          :value=\"country.value\"\n          :key=\"index\"\n        >\n          {{ country.label }}\n        </option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"themes\">Улюблені теми:</label>\n      <select\n        id=\"themes\"\n        class=\"form-control\"\n        :class=\"$v.form.favoriteThemes.$error ? 'is-invalid' : ''\"\n        v-model=\"form.favoriteThemes\"\n        multiple\n      >\n        <option\n          v-for=\"(theme, index) in themes\"\n          :value=\"theme.value\"\n          :key=\"index\"\n        >\n          {{ theme.label }}\n        </option>\n      </select>\n    </div>\n    <div class=\"form-group form-check\">\n      <input\n        type=\"checkbox\"\n        class=\"form-check-input\"\n        id=\"notification\"\n        v-model=\"form.agreeWithSendEmail\"\n      />\n      <label class=\"form-check-label\" for=\"notification\">\n        Повідоляти мене про нові курси\n      </label>\n    </div>\n    <div class=\"form-group form-check\">\n      <input\n        type=\"checkbox\"\n        class=\"form-check-input\"\n        id=\"rules\"\n        :class=\"$v.form.agreeWithRules.$error ? 'is-invalid' : ''\"\n        v-model.trim=\"form.agreeWithRules\"\n      />\n      <label class=\"form-check-label\" for=\"notification\">\n        Ознайомлена з правилами\n      </label>\n      <p\n        v-if=\"$v.form.login.$dirty && !$v.form.password.required\"\n        class=\"invalid-feedback\"\n      >\n        Обов'язкове поле\n      </p>\n    </div>\n    <div class=\"flex\">\n      <div class=\"form-check\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          value=\"male\"\n          name=\"exampleRadios\"\n          id=\"male\"\n          v-model=\"form.gender\"\n        />\n        <label class=\"form-check-label\" for=\"male\"> Чоловік </label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          value=\"female\"\n          name=\"exampleRadios\"\n          id=\"female\"\n          v-model=\"form.gender\"\n        />\n        <label class=\"form-check-label\" for=\"female\"> Жінка </label>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n  </form>\n  <div v-else>\n    <h3>\n      {{ `${form.login}, вітаємо Ви успішно зареєстровані` }}\n    </h3>\n  </div>\n</template>\n\n<script>\nimport { validationMixin } from \"vuelidate\";\nimport { required, minLength, email } from \"vuelidate/lib/validators\";\n\nexport default {\n  mixins: [validationMixin],\n  data() {\n    return {\n      form: {\n        login: \"\",\n        email: \"\",\n        password: \"\",\n        country: \"Russia\",\n        favoriteThemes: [\"IT\"],\n        agreeWithSendEmail: false,\n        agreeWithRules: false,\n        gender: \"male\",\n      },\n      countries: [\n        { label: \"Польща\", value: \"Poland\" },\n        { label: \"Україна\", value: \"Ukraine\" },\n        { label: \"США\", value: \"USA\" },\n      ],\n      themes: [\n        { label: \"Технології\", value: \"IT\" },\n        { label: \"Мови\", value: \"languages\" },\n        { label: \"Математика\", value: \"mathematics\" },\n      ],\n      registrationPassed: false, // Added variable to track successful registration\n    };\n  },\n  validations: {\n    form: {\n      login: { required, minLength: minLength(5) },\n      email: { required, email },\n      password: { required },\n      agreeWithRules: {\n        mustBeTrue(value) {\n          return value;\n        },\n      },\n      favoriteThemes: {\n        maxCount: (value) => value.length <= 3,\n      },\n    },\n  },\n  methods: {\n    checkForm() {\n      this.$v.form.$touch();\n      if (!this.$v.form.$error) {\n        this.registrationPassed = true;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.form-group {\n  display: flex;\n}\n.form-control {\n  width: 400px;\n}\n.form-check {\n  display: flex;\n  margin-right: 10px;\n}\nbutton {\n  margin-top: 15px;\n}\n</style>\n"],"mappings":"AA0JA,SAAAA,eAAA;AACA,SAAAC,QAAA,EAAAC,SAAA,EAAAC,KAAA;AAEA;EACAC,MAAA,GAAAJ,eAAA;EACAK,KAAA;IACA;MACAC,IAAA;QACAC,KAAA;QACAJ,KAAA;QACAK,QAAA;QACAC,OAAA;QACAC,cAAA;QACAC,kBAAA;QACAC,cAAA;QACAC,MAAA;MACA;MACAC,SAAA,GACA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,EACA;MACAC,MAAA,GACA;QAAAF,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,EACA;MACAE,kBAAA;IACA;EACA;;EACAC,WAAA;IACAb,IAAA;MACAC,KAAA;QAAAN,QAAA;QAAAC,SAAA,EAAAA,SAAA;MAAA;MACAC,KAAA;QAAAF,QAAA;QAAAE;MAAA;MACAK,QAAA;QAAAP;MAAA;MACAW,cAAA;QACAQ,WAAAJ,KAAA;UACA,OAAAA,KAAA;QACA;MACA;MACAN,cAAA;QACAW,QAAA,EAAAL,KAAA,IAAAA,KAAA,CAAAM,MAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,UAAA;MACA,KAAAC,EAAA,CAAAnB,IAAA,CAAAoB,MAAA;MACA,UAAAD,EAAA,CAAAnB,IAAA,CAAAqB,MAAA;QACA,KAAAT,kBAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}